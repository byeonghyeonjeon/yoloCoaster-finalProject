<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="login">

	<!--로그인 -->
	<select id="getMemberLogin" parameterType="MemberVO" resultType="MemberVO">
		SELECT 
			*
		FROM 
			member
		WHERE mem_id=#{mem_id} 
		AND mem_pass=#{mem_pass}
		AND mem_st='Y'
	</select>
	
	<!-- 회원가입 -->
	<insert id="insertMember" parameterType="MemberVO">
		INSERT INTO MEMBER
	  (
	    MEM_SEQ,    MEM_ID,     MEM_MAIL,    
	    MEM_PASS,   MEM_ADD1,   MEM_ADD2,    
	    MEM_TEL,    MEM_AGE,    MEM_GEN,    
	    MEM_NAME,   MEM_NICK,   MEM_WARN,   
	    MEM_PROFILE,    MEM_ST
	  )
	  VALUES
	  (
	    MEM_SEQ.nextval, #{mem_id}, #{mem_mail},
		#{mem_pass}, #{mem_add1,jdbcType=VARCHAR}, #{mem_add2,jdbcType=VARCHAR},
		#{mem_tel,jdbcType=VARCHAR}, #{mem_age,jdbcType=VARCHAR}, #{mem_gen,jdbcType=VARCHAR},
		#{mem_name}, #{mem_nick,jdbcType=VARCHAR}, '0',
		#{mem_profile,jdbcType=VARCHAR}, 'Y'
	  )
		
	</insert>
	
	<!-- 아이디 중복확인 -->
	<select id="checkMember" parameterType="MemberVO">
		select count(*)
		FROM member
		WHERE mem_id=#{mem_id}
	</select>
	
	<!--아이디 찾기 : 찾은 id의 joinInfo 테이블에 난수 추가 -->
	<update id="findMemId" parameterType="MemberVO">
		UPDATE joininfo
		SET join_certify=(select dbms_random.string('X', 20) str from dual)
		WHERE mem_id IN (
			SELECT mem_id
			FROM member
			WHERE mem_name=#{mem_name}
			AND mem_mail =#{mem_mail})	
	</update>
	
	<!-- 해당 회원 인증번호 받기 -->
	<select id="getjoinCertify" parameterType="MemberVO" resultType="String">
		SELECT join_certify
		FROM joininfo
		WHERE mem_id IN (
		SELECT mem_id FROM member
		WHERE mem_name=#{mem_name}
		AND mem_mail =#{mem_mail})
	</select>
	
	<!-- 해당 회원 id 리스트 가져오기 -->
	<select id="getMemIdList" parameterType="MemberVO" resultType="String">
		SELECT mem_id FROM member
		WHERE mem_name=#{mem_name}
		AND mem_mail =#{mem_mail}
	</select>
	
	<!-- 해당 회원 비밀번호 인증번호 받기 -->
	<select id="getPassCertify" parameterType="MemberVO" resultType="String">
		SELECT join_certify
		FROM joininfo
		WHERE mem_id=#{mem_id}
	</select>
	
	<!--비밀번호 찾기 : 찾은 id의 joinInfo 테이블에 난수 추가 -->
	<update id="findMemPass" parameterType="MemberVO">
		UPDATE joininfo
		SET join_certify=(select dbms_random.string('X', 20) str from dual)
		WHERE mem_id=#{mem_id}
	</update>
	
	<!--비밀번호 변경 : 찾은 id의 joinInfo 테이블에 난수 추가 -->
	<update id="resetMemberPass" parameterType="MemberVO">
		UPDATE member
		SET mem_pass = #{mem_pass}
		WHERE mem_id = #{mem_id}
	</update>

	<!--회원가입정보 -->
	<insert id="insertMemberJoinInfo" parameterType="MemberVO">
		insert into joininfo(join_seq, mem_id,  join_path, join_dt)
		values(join_seq.nextval,#{mem_id},#{join_path,jdbcType=VARCHAR},sysdate)
	</insert>
		
	<!--회원 인증-->
	<select id="joinCertify" parameterType="MemberVO">
		SELECT join_certify
		from joininfo
		where mem_id =#{mem_id}
	</select>

	
</mapper>